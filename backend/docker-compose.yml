version: '3.4'

services:
  spacecards.api:
    image: ${DOCKER_REGISTRY-}spacecardsapi
    build:
      context: .
      dockerfile: SpaceCards.API/Dockerfile
    container_name: api 

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: pwd
    ports:
      - 5433:5432
    container_name: db
    volumes:
      - db-SpaceCards-data:/var/lib/postgresql/data

  Testdb:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: pwd
    ports:
      - 5439:5432
    container_name: Testdb

  jaeger:
    image: jaegertracing/all-in-one
    environment:
      - SAMPLING_STRATEGIES_FILE=/etc/jaeger/sampling_strategies.json
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    container_name: jaeger
    restart: unless-stopped
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14250:14250
      - 14268:14268
      - 14269:14269
      - 9411:9411

  seq:
    image: datalust/seq
    container_name: seq
    restart: unless-stopped
    environment:
      - ACCEPT_EULA=Y
    ports:
      - 5341:80
   
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    volumes: 
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  redis:
    image: redis
    container_name: redis
    ports:
      - 6380:6379  

volumes:
  db-SpaceCards-data:
    driver: local
  

  